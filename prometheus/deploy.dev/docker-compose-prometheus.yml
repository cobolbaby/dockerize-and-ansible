version: '3.7'

x-default:
  &default_cfg
  logging:
    driver: "json-file"
    options:
      max-size: "200k"
      max-file: "10"

services:

  prometheus:
    << : *default_cfg
    image: registry.inventec/hub/prom/prometheus:v2.36.2
    hostname: prometheus
    networks:
      - overlay
    ports:
      - target: 9090
        published: 9090
        protocol: tcp
        mode: host
    volumes:
      - ./config/prometheus:/config:ro
      - /data/hdd4/prometheus/data:/data
      - /etc/localtime:/etc/localtime:ro
    command:
      - --config.file=/config/prometheus.yml
      - --web.enable-lifecycle
      - --storage.tsdb.path=/data
      - --storage.tsdb.retention.time=365d
      - --web.enable-remote-write-receiver
    deploy:
      restart_policy:
        condition: on-failure
      placement:
        constraints: 
          - node.role == manager
          - node.labels.alias == infra01.dev.itc.inventec
      resources:
        limits:
          cpus: "2"
          memory: 8g
    
  postgres-exporter:
    << : *default_cfg
    image: registry.inventec/hub/prometheuscommunity/postgres-exporter:v0.10.1
    networks:
      - overlay
    volumes:
      - ./config/postgres_exporter:/config:ro  
    environment:
      DATA_SOURCE_URI: ${PG_URI}/postgres?sslmode=disable
      DATA_SOURCE_USER: ${PG_MONITOR_USER}
      DATA_SOURCE_PASS: ${PG_MONITOR_PASS}
    command:
      - --extend.query-path=/config/custom-queries.yaml
      - --auto-discover-databases
      - --include-databases=bdc
    deploy:
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: "1"
          memory: 128m

  greenplum-exporter:
    << : *default_cfg
    image: registry.inventec/hub/prometheuscommunity/postgres-exporter:v0.10.1
    networks:
      - overlay
    volumes:
      - ./config/greenplum_exporter:/config:ro
    environment:
      DATA_SOURCE_URI: ${GP_URI}/postgres?sslmode=disable
      DATA_SOURCE_USER: ${PG_MONITOR_USER}
      DATA_SOURCE_PASS: ${PG_MONITOR_PASS}
    command:
      - --disable-default-metrics
      - --disable-settings-metrics
      - --auto-discover-databases
      - --exclude-databases=gpperfmon
      - --extend.query-path=/config/custom-queries.yaml
    deploy:
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: "1"
          memory: 128m

  alertmanager:
    << : *default_cfg
    image: registry.inventec/hub/prom/alertmanager:v0.24.0
    hostname: alertmanager
    networks:
      - overlay
    ports:
      - target: 9093
        published: 9093
        protocol: tcp
        mode: host
    volumes:
      - ./config/alertmanager:/etc/alertmanager
      - /data/hdd4/alertmanager:/alertmanager
      - /etc/localtime:/etc/localtime:ro
    command:
      - --config.file=/etc/alertmanager/alertmanager.yml
      - --storage.path=/alertmanager
      - --log.level=info
    deploy:
      restart_policy:
        condition: on-failure
      placement:
        constraints: 
          - node.labels.alias == infra01.dev.itc.inventec
      resources:
        limits:
          cpus: "1"
          memory: 1g

  kafka-lag-exporter:
    << : *default_cfg
    image: registry.inventec/hub/seglo/kafka-lag-exporter:0.7.1
    hostname: kafka-lag-exporter
    networks:
      - overlay
    volumes:
      - ./config/kafka-lag-exporter:/opt/docker/conf
    command: 
      - /opt/docker/bin/kafka-lag-exporter
      - -Dconfig.file=/opt/docker/conf/application.conf
      - -Dlogback.configurationFile=/opt/docker/conf/logback.xml
    deploy:
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: "1"
          memory: 512m

networks:
  overlay:
    external: true
    name: bdc
